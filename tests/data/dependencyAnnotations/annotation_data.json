{
    "test/test/some_global_function/parameter_with_function_dependency": {
        "target": "test/test/some_global_function/parameter_with_function_dependency",
        "authors": ["$autogen$"],
        "reviewers": [],
        "comment": "I turned this in a dependency because the phrase 'Only available if parameter_without_dependency equals None' was found.",
        "reviewResult": "",
        "is_depending_on": ["test/test/some_global_function/parameter_without_dependency"],
        "has_dependent_parameter": [],
        "condition": {
            "variant": "is_none",
            "condition": "Only available if parameter_without_dependency equals None",
            "dependee": "parameter_without_dependency",
            "also": false
        },
        "action": {
            "variant": "is_ignored",
            "action": "not ignored"
        }
    },

    "test/test/some_global_function/parameter_without_dependency": {
        "target": "test/test/some_global_function/parameter_without_dependency",
        "authors": ["$autogen$"],
        "reviewers": [],
        "comment": "",
        "reviewResult": "",
        "is_depending_on": [],
        "has_dependent_parameter": ["test/test/some_global_function/parameter_with_function_dependency"],
        "condition": {
            "variant": "condition",
            "condition": "",
            "dependee": "",
            "combined_with": []
        },
        "action": {
            "variant": "action",
            "action": ""
        }
    },

    "test/test/some_global_function/parameter_with_init_dependency": {
        "target": "test/test/some_global_function/parameter_with_init_dependency",
        "authors": ["$autogen$"],
        "reviewers": [],
        "comment": "I turned this in a dependency because the phrase 'Only available if init_parameter equals auto' was found.",
        "reviewResult": "",
        "is_depending_on": ["test/test/__init__/init_parameter"],
        "has_dependent_parameter": [],
        "condition": {
            "variant": "has_value",
            "condition": "Only available if init_parameter equals auto",
            "dependee": "init_parameter",
            "value": "auto",
            "also": false,
            "check_dependee": false,
            "combined_with": []
        },
        "action": {
            "variant": "is_ignored",
            "action": "not ignored"
        }
    },
    "test/test/__init__/init_parameter": {
        "target": "test/test/__init__/init_parameter",
        "authors": ["$autogen$"],
        "reviewers": [],
        "comment": "",
        "reviewResult": "",
        "is_depending_on": [],
        "has_dependent_parameter": ["test/test/some_global_function/parameter_with_init_dependency"],
        "condition": {
            "variant": "condition",
            "condition": "",
            "dependee": "",
            "combined_with": []
        },
        "action": {
            "variant": "action",
            "action": ""
        }
    },

    "test/other_test/some_other_global_function/parameter_with_relational_dependency": {
        "target": "test/other_test/some_other_global_function/parameter_with_relational_dependency",
        "authors": ["$autogen$"],
        "reviewers": [],
        "comment": "I turned this in a dependency because the phrase 'if parameter_with_relational_dependency_X > parameter_with_relational_dependency_Y' was found.",
        "reviewResult": "",
        "is_depending_on": [
            "test/other_test/some_other_global_function/parameter_with_relational_dependency_X",
            "test/other_test/some_other_global_function/parameter_with_relational_dependency_Y"
        ],
        "has_dependent_parameter": [],
        "condition": {
            "variant": "in_relation",
            "condition": "if parameter_with_relational_dependency_X > parameter_with_relational_dependency_Y",
            "combined_with": [],
            "left_dependee": "parameter_with_relational_dependency_X",
            "right_dependee": "parameter_with_relational_dependency_Y",
            "rel_op": ">"
        },
        "action": {
            "variant": "will_be_set",
            "action": "parameter_with_relational_dependency equals False",
            "depender": "parameter_with_relational_dependency",
            "value": "False"
        }
    },
    "test/other_test/some_other_global_function/parameter_with_relational_dependency_X": {
        "target": "test/other_test/some_other_global_function/parameter_with_relational_dependency_X",
        "authors": ["$autogen$"],
        "reviewers": [],
        "comment": "",
        "reviewResult": "",
        "is_depending_on": [],
        "has_dependent_parameter": [
            "test/other_test/some_other_global_function/parameter_with_relational_dependency_Y",
            "test/other_test/some_other_global_function/parameter_with_relational_dependency",
            "test/other_test/some_other_global_function/parameter_with_combined_dependency"
        ],
        "condition": {
            "variant": "condition",
            "condition": "",
            "dependee": "",
            "combined_with": []
        },
        "action": {
            "variant": "action",
            "action": ""
        }
    },

    "test/other_test/some_other_global_function/parameter_with_relational_dependency_Y": {
        "target": "test/other_test/some_other_global_function/parameter_with_relational_dependency_Y",
        "authors": ["$autogen$"],
        "reviewers": [],
        "comment": "I turned this in a dependency because the phrase 'Only available if parameter_with_relational_dependency_X is not None' was found.",
        "reviewResult": "",
        "is_depending_on": ["test/other_test/some_other_global_function/parameter_with_relational_dependency_X"],
        "has_dependent_parameter": [
            "test/other_test/some_other_global_function/parameter_with_relational_dependency",
            "test/other_test/some_other_global_function/parameter_with_combined_dependency"
        ],
        "condition": {
            "variant": "has_value",
            "condition": "Only available if parameter_with_relational_dependency_X is not None",
            "dependee": "parameter_with_relational_dependency_X",
            "value": "not None",
            "combined_with": [],
            "also": false,
            "check_dependee": false
        },
        "action": {
            "variant": "is_ignored",
            "action": "not ignored"
        }
    },

    "test/other_test/some_other_global_function/parameter_with_combined_dependency": {
        "target": "test/other_test/some_other_global_function/parameter_with_combined_dependency",
        "authors": ["$autogen$"],
        "reviewers": [],
        "comment": "I turned this in a dependency because the phrase 'Only available if parameter_with_relational_dependency_Y equals False' was found.",
        "reviewResult": "",
        "is_depending_on": [
            "test/other_test/some_other_global_function/parameter_with_relational_dependency_Y",
            "test/other_test/some_other_global_function/parameter_with_relational_dependency_X"
        ],
        "has_dependent_parameter": [],
        "condition": {
            "variant": "has_value",
            "condition": "Only available if parameter_with_relational_dependency_Y equals False",
            "dependee": "parameter_with_relational_dependency_Y",
            "value": "False",
            "also": false,
            "check_dependee": false,
            "combined_with": [
                {
                    "variant": "has_value",
                    "condition": "Only available if parameter_with_relational_dependency_X equals True",
                    "dependee": "parameter_with_relational_dependency_X",
                    "value": "True",
                    "also": false,
                    "check_dependee": false,
                    "combined_with": []
                }
            ]
        },
        "action": {
            "variant": "is_ignored",
            "action": "not ignored"
        }
    }
}
